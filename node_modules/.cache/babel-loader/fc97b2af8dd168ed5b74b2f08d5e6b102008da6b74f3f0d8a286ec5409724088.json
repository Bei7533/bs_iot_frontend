{"ast":null,"code":"import \"core-js/modules/es.array.push.js\";\n//引入组件\nimport { BaiduMap, BmControl, BmView, BmAutoComplete, BmLocalSearch, BmMarker, BmGeolocation } from \"vue-baidu-map\";\nexport default {\n  data() {\n    return {\n      username: this.$route.query.username,\n      activeIndex: '1',\n      activeIndex2: '1',\n      //定位位置信息\n      center: {},\n      //检索关键字\n      keyword: \"\",\n      //输入框input值\n      input3: \"\",\n      map: '',\n      mapZoom: 100,\n      point: {\n        lng: 120.07,\n        lat: 30.16\n      }\n    };\n  },\n  //需要引入的组件\n  components: {\n    BaiduMap,\n    BmControl,\n    BmView,\n    BmAutoComplete,\n    BmLocalSearch,\n    BmMarker,\n    BmGeolocation\n  },\n  mounted() {\n    this.fetchData(); // 在组件挂载后调用发送请求的方法\n  },\n\n  methods: {\n    handleSelect(key, keyPath) {\n      if (key === '1-1') {\n        // alert('1-1')\n        this.$router.push({\n          path: '/user/userinfo',\n          query: {\n            username: this.username\n          }\n        });\n      } else if (key === '1-2') {\n        this.$router.push({\n          path: '/user/userinfoedit',\n          query: {\n            username: this.username\n          }\n        });\n      } else if (key === '2') {\n        // this.$router.push({\n        //   path: '/user/map',\n        //   query: {username: this.username}\n        // });\n      } else if (key === '3') {\n        this.$router.push({\n          path: '/user/device',\n          query: {\n            username: this.username\n          }\n        });\n      } else if (key === '4') {\n        this.$router.push({\n          path: '/user/data',\n          query: {\n            username: this.username\n          }\n        });\n      }\n    },\n    //输入框\n    inputfz() {\n      this.keyword = this.input3;\n    },\n    // 初始化\n    initMap() {\n      // 创建Map实例\n      this.map = new BMap.Map('map');\n      // 初始化地图,设置中心点坐标和地图级别\n      this.map.centerAndZoom(new BMap.Point(120.07, 30.16), this.mapZoom);\n      // 设置地图显示的城市 此项是必须设置的\n      this.map.setCurrentCity('杭州');\n      // 启用滚轮放大缩小，默认禁用\n      this.map.enableScrollWheelZoom(true);\n      // 启用地图惯性拖拽，默认禁用\n      this.map.enableContinuousZoom(true);\n    },\n    //地图加载后的回调\n    mapReady({\n      BMap,\n      map\n    }) {\n      //保存this指向，因为在百度的回调中this不指向vue\n      const _this = this;\n      // 获取自动定位方法\n      var geolocation = new BMap.Geolocation();\n      // 获取自动定位获取的坐标信息\n      geolocation.getCurrentPosition(function (r) {\n        //可以conso.log看一下这个r，他里面包含了检索到的位置信息。下面就把两个维度信息赋值给center来定位\n        _this.center = {\n          lng: r.point.lng,\n          lat: r.point.lat\n        };\n        console.log(r);\n      },\n      //启用高精度\n      {\n        enableHighAccuracy: true\n      });\n    }\n  }\n};","map":{"version":3,"names":["BaiduMap","BmControl","BmView","BmAutoComplete","BmLocalSearch","BmMarker","BmGeolocation","data","username","$route","query","activeIndex","activeIndex2","center","keyword","input3","map","mapZoom","point","lng","lat","components","mounted","fetchData","methods","handleSelect","key","keyPath","$router","push","path","inputfz","initMap","BMap","Map","centerAndZoom","Point","setCurrentCity","enableScrollWheelZoom","enableContinuousZoom","mapReady","_this","geolocation","Geolocation","getCurrentPosition","r","console","log","enableHighAccuracy"],"sources":["src/views/map/Map.vue"],"sourcesContent":["\r\n<script>\r\n//引入组件\r\nimport {\r\n  BaiduMap,\r\n  BmControl,\r\n  BmView,\r\n  BmAutoComplete,\r\n  BmLocalSearch,\r\n  BmMarker,\r\n  BmGeolocation,\r\n} from \"vue-baidu-map\";\r\nexport default {\r\n  data() {\r\n    return {\r\n      username: this.$route.query.username,\r\n      activeIndex: '1',\r\n      activeIndex2: '1',\r\n      //定位位置信息\r\n      center: {},\r\n      //检索关键字\r\n      keyword: \"\",\r\n      //输入框input值\r\n      input3: \"\",\r\n      map: '',\r\n      mapZoom: 100,\r\n\r\n      point: {\r\n        lng: 120.07,\r\n        lat: 30.16\r\n      },\r\n\r\n    };\r\n  },\r\n  //需要引入的组件\r\n  components: {\r\n    BaiduMap,\r\n    BmControl,\r\n    BmView,\r\n    BmAutoComplete,\r\n    BmLocalSearch,\r\n    BmMarker,\r\n    BmGeolocation,\r\n  },\r\n  mounted() {\r\n    this.fetchData(); // 在组件挂载后调用发送请求的方法\r\n  },\r\n  methods: {\r\n    handleSelect(key, keyPath) {\r\n      if (key === '1-1') {\r\n        // alert('1-1')\r\n        this.$router.push({\r\n          path: '/user/userinfo',\r\n          query: { username: this.username }\r\n        });\r\n      } else if (key === '1-2') {\r\n        this.$router.push({\r\n          path: '/user/userinfoedit',\r\n          query: { username: this.username }\r\n        });\r\n      } else if (key === '2') {\r\n        // this.$router.push({\r\n        //   path: '/user/map',\r\n        //   query: {username: this.username}\r\n        // });\r\n      } else if (key === '3') {\r\n        this.$router.push({\r\n          path: '/user/device',\r\n          query: { username: this.username }\r\n        });\r\n      } else if (key === '4') {\r\n        this.$router.push({\r\n          path: '/user/data',\r\n          query: { username: this.username }\r\n        });\r\n      }\r\n    },\r\n\r\n\r\n    //输入框\r\n    inputfz() {\r\n      this.keyword = this.input3;\r\n    },\r\n    // 初始化\r\n    initMap() {\r\n      // 创建Map实例\r\n      this.map = new BMap.Map('map')\r\n      // 初始化地图,设置中心点坐标和地图级别\r\n      this.map.centerAndZoom(new BMap.Point(120.07, 30.16), this.mapZoom)\r\n      // 设置地图显示的城市 此项是必须设置的\r\n      this.map.setCurrentCity('杭州')\r\n      // 启用滚轮放大缩小，默认禁用\r\n      this.map.enableScrollWheelZoom(true)\r\n      // 启用地图惯性拖拽，默认禁用\r\n      this.map.enableContinuousZoom(true)\r\n    },\r\n    //地图加载后的回调\r\n    mapReady({ BMap, map }) {\r\n      //保存this指向，因为在百度的回调中this不指向vue\r\n      const _this = this;\r\n      // 获取自动定位方法\r\n      var geolocation = new BMap.Geolocation();\r\n      // 获取自动定位获取的坐标信息\r\n      geolocation.getCurrentPosition(\r\n        function (r) {\r\n          //可以conso.log看一下这个r，他里面包含了检索到的位置信息。下面就把两个维度信息赋值给center来定位\r\n          _this.center = {\r\n            lng: r.point.lng,\r\n            lat: r.point.lat,\r\n          };\r\n          console.log(r)\r\n        },\r\n        //启用高精度\r\n        { enableHighAccuracy: true }\r\n      );\r\n    },\r\n\r\n\r\n  },\r\n};\r\n</script>\r\n\r\n<template>\r\n  <div class=\"body\">\r\n\r\n    <el-menu :default-active=\"activeIndex2\" class=\"el-menu-demo\" mode=\"horizontal\" @select=\"handleSelect\"\r\n      background-color=\"#2A7A88\" text-color=\"#fff\" active-text-color=\"#ffd04b\" style=\"z-index: 11\">\r\n      <el-submenu index=\"1\">\r\n        <template slot=\"title\">\r\n          <i class=\"el-icon-user\"></i>\r\n          <span>个人信息</span>\r\n        </template>\r\n        <el-menu-item index=\"1-1\">查看信息</el-menu-item>\r\n        <el-menu-item index=\"1-2\">编辑信息</el-menu-item>\r\n      </el-submenu>\r\n      <el-menu-item index=\"2\">\r\n        <template slot=\"title\">\r\n          <i class=\"el-icon-map-location\"></i>\r\n          <span slot=\"title\">查看地图</span>\r\n        </template>\r\n      </el-menu-item>\r\n      <el-menu-item index=\"3\">\r\n        <i class=\"el-icon-setting\"></i>\r\n        <span slot=\"title\">设备管理</span>\r\n      </el-menu-item>\r\n      <el-menu-item index=\"4\">\r\n        <i class=\"el-icon-data-line\"></i>\r\n        <span slot=\"title\">数据统计</span>\r\n      </el-menu-item>\r\n    </el-menu>\r\n    <h1 class=\"username-style\">{{ username }}</h1>\r\n    <div class=\"demo-basic--circle\" style=\"position: absolute; top: 12px; right: 150px;\">\r\n      <!-- <div class=\"block\"><el-avatar size=\"40\" icon=\"el-icon-user-solid\"></el-avatar></div>\r\n            <div class=\"block\" v-for=\"size in sizeList\" :key=\"size\">\r\n              <el-avatar size=\"size\" icon=\"el-icon-user-solid\"></el-avatar>\r\n            </div> -->\r\n    </div>\r\n\r\n\r\n    <div>\r\n      <el-card style=\"height: 89vh\">\r\n        <el-input placeholder=\"请输入地址\" v-model=\"input3\" class=\"input-with-select\">\r\n          <el-button slot=\"append\" icon=\"el-icon-search\" @click=\"inputfz\">搜索</el-button>\r\n        </el-input>\r\n        <!--\r\n            scroll-wheel-zoom是是否可以缩放\r\n            @ready是图加载完后触发事件\r\n            center是位置定位\r\n            zoom是缩放大小限制\r\n            inertial-dragging是允许惯性拖拽\r\n           -->\r\n        <baidu-map class=\"bm-view\" :zoom=\"15\" :center=\"center\" inertial-dragging @ready=\"mapReady\"\r\n          :scroll-wheel-zoom=\"true\">\r\n          <!-- 定位控件   anchor=\"BMAP_ANCHOR_BOTTOM_RIGHT\"代表放在右下角 -->\r\n          <bm-geolocation anchor=\"BMAP_ANCHOR_BOTTOM_RIGHT\" :showAddressBar=\"true\" :autoLocation=\"true\"></bm-geolocation>\r\n          <!-- 地区检索  keyword：关键字搜索   @searchcomplete：检索完成后的回调函数   auto-viewport：检索结束后是否自动调整地图事业  -->\r\n          <bm-local-search :keyword=\"keyword\" @searchcomplete=\"search\" :auto-viewport=\"true\"\r\n            class=\"search\"></bm-local-search>\r\n          <!-- 缩放控件   anchor代表控件停靠位置   anchor=\"BMAP_ANCHOR_TOP_RIGHT\"代表放在右上角-->\r\n          <bm-navigation anchor=\"BMAP_ANCHOR_TOP_RIGHT\"></bm-navigation>\r\n          <bm-marker :position=\"point\">\r\n          </bm-marker>\r\n        </baidu-map>\r\n\r\n      </el-card>\r\n    </div>\r\n  </div>\r\n</template>\r\n\r\n\r\n<style scoped>\r\n.body {\r\n  position: absolute;\r\n  top: 0px;\r\n  left: 0px;\r\n  right: 0px;\r\n  bottom: 0px;\r\n  width: auto;\r\n  height: auto;\r\n  z-index: 0;\r\n}\r\n\r\n.username-style {\r\n  position: absolute;\r\n  top: 2px;\r\n  right: 65px;\r\n  font-size: 25px;\r\n  color: #fff;\r\n}\r\n\r\n/* 给个宽高 */\r\n.bm-view {\r\n  position: absolute;\r\n  left: 0px;\r\n  bottom: 0px;\r\n  height: 100%;\r\n  width: 100%;\r\n}\r\n\r\n.input-with-select {\r\n  position: absolute;\r\n  left: 10%;\r\n  width: 400px;\r\n  margin-bottom: 5px;\r\n  z-index: 10;\r\n}\r\n\r\n.search {\r\n  height: 300px;\r\n  overflow: auto;\r\n}\r\n</style>\r\n"],"mappings":";AAEA;AACA,SACAA,QAAA,EACAC,SAAA,EACAC,MAAA,EACAC,cAAA,EACAC,aAAA,EACAC,QAAA,EACAC,aAAA,QACA;AACA;EACAC,KAAA;IACA;MACAC,QAAA,OAAAC,MAAA,CAAAC,KAAA,CAAAF,QAAA;MACAG,WAAA;MACAC,YAAA;MACA;MACAC,MAAA;MACA;MACAC,OAAA;MACA;MACAC,MAAA;MACAC,GAAA;MACAC,OAAA;MAEAC,KAAA;QACAC,GAAA;QACAC,GAAA;MACA;IAEA;EACA;EACA;EACAC,UAAA;IACArB,QAAA;IACAC,SAAA;IACAC,MAAA;IACAC,cAAA;IACAC,aAAA;IACAC,QAAA;IACAC;EACA;EACAgB,QAAA;IACA,KAAAC,SAAA;EACA;;EACAC,OAAA;IACAC,aAAAC,GAAA,EAAAC,OAAA;MACA,IAAAD,GAAA;QACA;QACA,KAAAE,OAAA,CAAAC,IAAA;UACAC,IAAA;UACApB,KAAA;YAAAF,QAAA,OAAAA;UAAA;QACA;MACA,WAAAkB,GAAA;QACA,KAAAE,OAAA,CAAAC,IAAA;UACAC,IAAA;UACApB,KAAA;YAAAF,QAAA,OAAAA;UAAA;QACA;MACA,WAAAkB,GAAA;QACA;QACA;QACA;QACA;MAAA,CACA,UAAAA,GAAA;QACA,KAAAE,OAAA,CAAAC,IAAA;UACAC,IAAA;UACApB,KAAA;YAAAF,QAAA,OAAAA;UAAA;QACA;MACA,WAAAkB,GAAA;QACA,KAAAE,OAAA,CAAAC,IAAA;UACAC,IAAA;UACApB,KAAA;YAAAF,QAAA,OAAAA;UAAA;QACA;MACA;IACA;IAGA;IACAuB,QAAA;MACA,KAAAjB,OAAA,QAAAC,MAAA;IACA;IACA;IACAiB,QAAA;MACA;MACA,KAAAhB,GAAA,OAAAiB,IAAA,CAAAC,GAAA;MACA;MACA,KAAAlB,GAAA,CAAAmB,aAAA,KAAAF,IAAA,CAAAG,KAAA,sBAAAnB,OAAA;MACA;MACA,KAAAD,GAAA,CAAAqB,cAAA;MACA;MACA,KAAArB,GAAA,CAAAsB,qBAAA;MACA;MACA,KAAAtB,GAAA,CAAAuB,oBAAA;IACA;IACA;IACAC,SAAA;MAAAP,IAAA;MAAAjB;IAAA;MACA;MACA,MAAAyB,KAAA;MACA;MACA,IAAAC,WAAA,OAAAT,IAAA,CAAAU,WAAA;MACA;MACAD,WAAA,CAAAE,kBAAA,CACA,UAAAC,CAAA;QACA;QACAJ,KAAA,CAAA5B,MAAA;UACAM,GAAA,EAAA0B,CAAA,CAAA3B,KAAA,CAAAC,GAAA;UACAC,GAAA,EAAAyB,CAAA,CAAA3B,KAAA,CAAAE;QACA;QACA0B,OAAA,CAAAC,GAAA,CAAAF,CAAA;MACA;MACA;MACA;QAAAG,kBAAA;MAAA,CACA;IACA;EAGA;AACA"},"metadata":{},"sourceType":"module","externalDependencies":[]}